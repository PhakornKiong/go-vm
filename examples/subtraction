// This example demonstrates a simple subtraction operation where two values are pushed onto the stack,
// subtracted, and the result is stored and then returned from memory.
// When subtracting 200 from 95, the result is -105. In 2's complement, this is represented as:
// 1. Calculate the positive binary representation of 105, which is 01101001.
// 2. Invert the digits to get 10010110.
// 3. Add 1 to the least significant bit (LSB) to get 10010111, which is the 2's complement representation of -105.
// This result will be stored and returned from memory as demonstrated below.

// Push the decimal value 200 onto the stack
PUSH1 0xC8  
// Push the decimal value 95 onto the stack
PUSH1 0x5F  
// Subtract the second value from the first value on the stack
SUB         
// Store 8 byte result into memory at offset position 0
PUSH1 0x00
STORE8
// Return the 8 byte value from memory
PUSH1 0x08
PUSH1 0x00
RETURN      
